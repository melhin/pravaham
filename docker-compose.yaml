version: "3.4"

volumes:
  pravham_pg_data: {}
  dragonflydata:

services:
  db:
    image: postgres:13
    restart: on-failure
    environment:
      POSTGRES_DB: pravaham
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pravham_pg_data:/var/lib/postgresql/data

  dragonfly:
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    # For better performance, consider `host` mode instead `port` to avoid docker NAT.
    # `host` mode is NOT currently supported in Swarm Mode.
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
    # network_mode: "host"
    volumes:
      - dragonflydata:/data
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - dragonfly
      - "db"
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_NAME: pravaham
      DB_USER: postgres
      DB_PASS: postgres
      REDIS_DSN: redis://dragonfly:6379/1
      DJANGO_SETTINGS_MODULE: pravaham.settings.base
      STREAM_SERVER: http://localhost:8002/

    ports:
      - "8001:8001"
  asyncapp:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - dragonfly
      - "db"
      - "webapp"
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_NAME: pravaham
      DB_USER: postgres
      DB_PASS: postgres
      REDIS_DSN: redis://dragonfly:6379/1
      DJANGO_SETTINGS_MODULE: pravaham.settings.async_base
      GUNICORN_WORKERS: 4
    command:
      - async
    ports:
      - "8002:8002"
  revproxy:
    container_name: revproxy
    build: nginx_revproxy
    depends_on:
      - webapp
      - asyncapp
    restart: always
    ports:
      - 8000:80
